[{"/mnt/c/Users/mpeter/code/personal/website-alex/src/index.js":"1","/mnt/c/Users/mpeter/code/personal/website-alex/src/App.js":"2","/mnt/c/Users/mpeter/code/personal/website-alex/src/reportWebVitals.js":"3","/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/Sidebar/Sidebar.js":"4","/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/LandingPage/LandingPage.js":"5","/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/DrawingPage/DrawingPage.js":"6","/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/Home/Home.js":"7","/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/Contact/Contact.js":"8","/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/Sidebar/Buttons/Buttons.js":"9","/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/DrawingPage/BackButton/BackButton.js":"10","/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/DrawingPage/CarouselPerso/CarouselPerso.js":"11","/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/Home/HomeCard/HomeCard.js":"12"},{"size":346,"mtime":1634740899493,"results":"13","hashOfConfig":"14"},{"size":1207,"mtime":1634740899460,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1634740899494,"results":"16","hashOfConfig":"14"},{"size":548,"mtime":1640196353010,"results":"17","hashOfConfig":"14"},{"size":2672,"mtime":1640510410104,"results":"18","hashOfConfig":"14"},{"size":5316,"mtime":1640510666322,"results":"19","hashOfConfig":"14"},{"size":3662,"mtime":1640465636336,"results":"20","hashOfConfig":"14"},{"size":1459,"mtime":1634740899461,"results":"21","hashOfConfig":"14"},{"size":1068,"mtime":1640197017166,"results":"22","hashOfConfig":"14"},{"size":444,"mtime":1639584699951,"results":"23","hashOfConfig":"14"},{"size":1935,"mtime":1640510612099,"results":"24","hashOfConfig":"14"},{"size":2285,"mtime":1640548616330,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"97x9ms",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/mpeter/code/personal/website-alex/src/index.js",[],["52","53"],"/mnt/c/Users/mpeter/code/personal/website-alex/src/App.js",[],"/mnt/c/Users/mpeter/code/personal/website-alex/src/reportWebVitals.js",[],"/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/Sidebar/Sidebar.js",[],"/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/LandingPage/LandingPage.js",[],"/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/DrawingPage/DrawingPage.js",["54","55"],"import React, { Component } from \"react\";\r\nimport CarouselPerso from \"./CarouselPerso/CarouselPerso\";\r\nimport BackButton from \"./BackButton/BackButton\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./DrawingPage.css\";\r\n\r\nclass DrawingPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      imgId: undefined,\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    ReactDOM.findDOMNode(this).addEventListener(\r\n      \"slide.bs.carousel\",\r\n      this.handleSlideChange\r\n    );\r\n  };\r\n  changeGreyImg() {\r\n    if (this.state.carouselState === \"First slide\") {\r\n      document.getElementById(\"preview-1\").style.filter = \"grayscale(80%)\";\r\n    } else {\r\n      document.getElementById(\"preview-2\").style.filter = \"grayscale(80%)\";\r\n    }\r\n  }\r\n  getParams() {\r\n    var urlParams;\r\n\r\n    (window.onpopstate = function () {\r\n      var match,\r\n        pl = /\\+/g, // Regex for replacing addition symbol with a space\r\n        search = /([^&=]+)=?([^&]*)/g,\r\n        decode = function (s) {\r\n          return decodeURIComponent(s.replace(pl, \" \"));\r\n        },\r\n        query = window.location.search.substring(1);\r\n\r\n      urlParams = {};\r\n      while ((match = search.exec(query)))\r\n        urlParams[decode(match[1])] = decode(match[2]);\r\n    })();\r\n    return urlParams;\r\n  }\r\n\r\n  getNextAndPrevImg(imgId) {\r\n    var maxImgId = 11;\r\n    var prevId, nextId;\r\n    if (imgId === 1) {\r\n      prevId = maxImgId;\r\n      nextId = imgId + 1;\r\n    } else if (imgId === maxImgId) {\r\n      prevId = imgId - 1;\r\n      nextId = 1;\r\n    } else {\r\n      prevId = imgId - 1;\r\n      nextId = imgId + 1;\r\n    }\r\n    return { prevId, nextId };\r\n  }\r\n\r\n  render() {\r\n    var urlParams = this.getParams();\r\n    var imgId = parseInt(urlParams[\"imgId\"]);\r\n    const jsonMetaData = require(\"../../drawingInformation/metaData\" +\r\n      imgId +\r\n      \".json\");\r\n    let ids = this.getNextAndPrevImg(imgId);\r\n    let prevId = ids.prevId;\r\n    let nextId = ids.nextId;\r\n    console.log(prevId, nextId);\r\n    let prevImgPath =\r\n      \"https://stgimgalex.blob.core.windows.net/thubnails/img\" +\r\n      prevId +\r\n      \".jpeg\";\r\n    let nextImgPath =\r\n      \"https://stgimgalex.blob.core.windows.net/thubnails/img\" +\r\n      nextId +\r\n      \".jpeg\";\r\n    let serieName = jsonMetaData[\"serie\"];\r\n    return (\r\n      <div className=\"drawing-page\">\r\n        <div className=\"serie-title\">{serieName}</div>\r\n        <BackButton />\r\n        <div className=\"content-drawing-page\">\r\n          <div className=\"left-content\">\r\n            <div className=\"preview\">\r\n              <img\r\n                id=\"preview-1\"\r\n                src={\r\n                  \"https://stgimgalex.blob.core.windows.net/thubnails/img\" +\r\n                  imgId +\r\n                  \".jpeg\"\r\n                }\r\n                alt=\"preview 1\"\r\n                data-target=\"#myCarousel\"\r\n                data-slide-to=\"0\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"preview\">\r\n              <img\r\n                id=\"preview-2\"\r\n                src={\r\n                  \"https://stgimgalex.blob.core.windows.net/thubnails/img\" +\r\n                  imgId +\r\n                  \"hand.jpeg\"\r\n                }\r\n                alt=\"preview 2\"\r\n                data-target=\"#myCarousel\"\r\n                data-slide-to=\"1\"\r\n              />\r\n            </div>\r\n            <div className=\"transition-img\">\r\n              <a\r\n                className=\"arrow-prev\"\r\n                href={\"draw?imgId=\" + prevId}\r\n                style={{\r\n                  background: \"url(\" + prevImgPath + \") center no-repeat\",\r\n                  backgroundSize: \"160px\",\r\n                }}\r\n              />\r\n              <div className=\"transition-name\">PREV</div>\r\n            </div>\r\n          </div>\r\n          <CarouselPerso\r\n            id=\"myCarousel\"\r\n            imgId={imgId}\r\n            ref={(node) => (this.myCarousel = node)}\r\n          />\r\n          <div className=\"right-content\">\r\n            <div className=\"title-and-price\">\r\n              <div className=\"draw-title\">{jsonMetaData[\"drawName\"]}</div>\r\n              <div className=\"price\">{jsonMetaData[\"price\"] + \" â‚¬\"}</div>\r\n            </div>\r\n            <div className=\"infos\">\r\n              <div className=\"draw-type\">Dessin original</div>\r\n              <div className=\"size-techniques\">\r\n                <div className=\"size-gram-content\">\r\n                  {jsonMetaData[\"width\"] +\r\n                    \" x \" +\r\n                    jsonMetaData[\"height\"] +\r\n                    \" cm\"}\r\n                </div>\r\n                <div className=\"size-gram-content\">\r\n                  {jsonMetaData[\"grammage\"]}\r\n                </div>\r\n              </div>\r\n              <div className=\"techniques\">{jsonMetaData[\"techniques\"]}</div>\r\n            </div>\r\n\r\n            <div className=\"transition-img\">\r\n              <div className=\"transition-name\">NEXT</div>\r\n              <a\r\n                className=\"arrow-next\"\r\n                href={\"draw?imgId=\" + nextId}\r\n                style={{\r\n                  background: \"url(\" + nextImgPath + \") center no-repeat\",\r\n                  backgroundSize: \"160px\",\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DrawingPage;\r\n","/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/Home/Home.js",[],"/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/Contact/Contact.js",[],"/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/Sidebar/Buttons/Buttons.js",[],"/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/DrawingPage/BackButton/BackButton.js",[],"/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/DrawingPage/CarouselPerso/CarouselPerso.js",[],"/mnt/c/Users/mpeter/code/personal/website-alex/src/Components/Home/HomeCard/HomeCard.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":115,"column":15,"nodeType":"62","endLine":122,"endColumn":17},{"ruleId":"60","severity":1,"message":"61","line":154,"column":15,"nodeType":"62","endLine":161,"endColumn":17},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]